{
  "openapi": "3.0.0",
  "info": {
    "version": "v0.0.1",
    "title": "API Documentation Event Management System",
    "description": "This is the API documentation for the Event Management System. It provides details about the available endpoints, request parameters, and response formats."
  },
  "host": "localhost:3000",
  "servers": [
    {
      "url": "http://localhost:3000/api",
      "description": "Development server"
    },
    {
      "url": "https://backend-acara-wine.vercel.app/api",
      "description": "Production server"
    }
  ],
  "basePath": "/",
  "schemes": [
    "http"
  ],
  "paths": {
    "/auth/register": {
      "post": {
        "tags": [
          "Auth"
        ],
        "description": "",
        "responses": {
          "200": {
            "description": "OK"
          },
          "400": {
            "description": "Bad Request"
          },
          "500": {
            "description": "Internal Server Error"
          }
        },
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/registerRequest"
              }
            },
            "application/xml": {
              "schema": {
                "$ref": "#/components/schemas/registerRequest"
              }
            }
          }
        }
      }
    },
    "/auth/login": {
      "post": {
        "tags": [
          "Auth"
        ],
        "description": "",
        "responses": {
          "200": {
            "description": "OK"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not Found"
          }
        },
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/loginRequest"
              }
            },
            "application/xml": {
              "schema": {
                "$ref": "#/components/schemas/loginRequest"
              }
            }
          }
        }
      }
    },
    "/auth/activation": {
      "post": {
        "tags": [
          "Auth"
        ],
        "description": "",
        "responses": {
          "200": {
            "description": "OK"
          },
          "400": {
            "description": "Bad Request"
          }
        },
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/activationRequest"
              }
            },
            "application/xml": {
              "schema": {
                "$ref": "#/components/schemas/activationRequest"
              }
            }
          }
        }
      }
    },
    "/auth/me": {
      "get": {
        "tags": [
          "Auth"
        ],
        "description": "",
        "responses": {
          "200": {
            "description": "OK"
          },
          "400": {
            "description": "Bad Request"
          },
          "404": {
            "description": "Not Found"
          }
        },
        "security": [
          {
            "bearerAuth": []
          }
        ]
      }
    }
  },
  "components": {
    "securitySchemes": {
      "bearerAuth": {
        "type": "http",
        "scheme": "bearer"
      }
    },
    "schemas": {
      "registerRequest": {
        "type": "object",
        "properties": {
          "fullName": {
            "type": "string",
            "description": "Full name of the user",
            "example": "John Doe"
          },
          "email": {
            "type": "string",
            "format": "email",
            "description": "Email address of the user",
            "example": "johndoe@gmail.com"
          },
          "userName": {
            "type": "string",
            "description": "Username of the user",
            "example": "johndoe123"
          },
          "password": {
            "type": "string",
            "description": "Password of the user",
            "example": "password123"
          },
          "confirmPassword": {
            "type": "string",
            "description": "Confirmation of the user's password",
            "example": "password123"
          }
        },
        "required": [
          "fullName",
          "email",
          "userName",
          "password",
          "confirmPassword"
        ]
      },
      "activationRequest": {
        "type": "object",
        "properties": {
          "activationCode": {
            "type": "string",
            "description": "Activation code sent to the user's email",
            "example": "1234567890abcdef"
          }
        },
        "required": [
          "activationCode"
        ]
      },
      "loginRequest": {
        "type": "object",
        "properties": {
          "identifier": {
            "type": "string",
            "description": "Email or username of the user",
            "example": "mazyaa123"
          },
          "password": {
            "type": "string",
            "description": "Password of the user",
            "example": "password123"
          }
        },
        "required": [
          "identifier",
          "password"
        ]
      }
    }
  }
}